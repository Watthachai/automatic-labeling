datasource db {
  provider  = "postgresql"
  url  	    = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  ADMIN
  USER
}

enum Status {
  IN_PROGRESS
  COMPLETED
  VERIFIED
  REJECTED
  CANCELLED
}

model User {
  id                String             @id @default(cuid())
  username          String             @unique
  password          String
  role              Role               @default(USER)
  hospitalId        String
  hospital          Hospital           @relation(fields: [hospitalId], references: [id])
  department        String
  phoneNumber       String? // Make phone number optional
  createdAt         DateTime           @default(now())
  lastLogin         DateTime?
  isActive          Boolean            @default(true)
  is2FAEnabled      Boolean            @default(false) // Disable 2FA by default
  activeProductions ActiveProduction[] // Rename from productions
  completedLogs     ProductionLog[]
  auditLogs         AuditLog[]
  productions       Production[] // Add this line to complete the relation
  updatedAt         DateTime           @updatedAt
}

model ActiveProduction {
  id          String     @id @default(cuid())
  userId      String
  user        User       @relation(fields: [userId], references: [id])
  material    String
  batch       String
  vendorBatch String
  startTime   DateTime
  endTime     DateTime?
  startCount  Int
  endCount    Int?
  status      Status     @default(IN_PROGRESS)
  verifiedBy  String?
  verifiedAt  DateTime?
  auditLogs   AuditLog[]

  @@index([status])
  @@index([batch])
}

model ProductionLog {
  id                  String   @id @default(cuid())
  userId              String
  username            String
  date                String
  startTime           DateTime
  endTime             DateTime
  startCount          Int
  endCount            Int
  totalProduced       Int
  material            String?
  batch               String?
  vendorBatch         String?
  materialDescription String?
  qrCodeData          String?  @db.Text
  qrCodeImage         String?  @db.Text
  serialNumbers       String[]
  createdAt           DateTime @default(now())
  updatedAt           DateTime @updatedAt
  user                User     @relation(fields: [userId], references: [id])
}

model AuditLog {
  id           String            @id @default(cuid())
  userId       String
  user         User              @relation(fields: [userId], references: [id])
  action       String
  details      String
  productionId String?          // Optional field
  production   ActiveProduction? @relation(fields: [productionId], references: [id])
  ipAddress    String
  createdAt    DateTime          @default(now())

  @@index([userId])
  @@index([action])
  @@index([createdAt])
}

model Production {
  id          String    @id @default(cuid())
  materialId  String
  material    Material  @relation(fields: [materialId], references: [id])
  batch       String
  targetCount Int
  actualCount Int       @default(0)
  status      Status    @default(IN_PROGRESS)
  userId      String
  user        User      @relation(fields: [userId], references: [id])
  startedAt   DateTime  @default(now())
  finishedAt  DateTime?
}

model Material {
  id          String       @id @default(cuid())
  code        String       @unique
  description String
  unit        String
  productions Production[]
}

model Hospital {
  id    String @id @default(cuid())
  name  String @unique
  users User[]
}
